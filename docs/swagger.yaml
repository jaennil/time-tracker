basePath: /v1
consumes:
- application/json
definitions:
  http.InternalServerErrorResponse:
    properties:
      error:
        example: the server encountered a problem and could not process your request
        type: string
    type: object
  http.Response:
    properties:
      error:
        example: message
        type: string
    type: object
  model.CreateUser:
    properties:
      passportNumber:
        example: 1234 567890
        maxLength: 11
        minLength: 11
        type: string
    required:
    - passportNumber
    type: object
  model.EndTask:
    properties:
      task_id:
        example: 1
        minimum: 1
        type: integer
      user_id:
        example: 1
        minimum: 1
        type: integer
    required:
    - task_id
    - user_id
    type: object
  model.PrettyActivity:
    properties:
      hours:
        type: integer
      minutes:
        type: number
      name:
        type: string
    type: object
  model.StartTask:
    properties:
      name:
        example: do stuff
        maxLength: 255
        minLength: 1
        type: string
      user_id:
        example: 1
        minimum: 1
        type: integer
    required:
    - name
    - user_id
    type: object
  model.Task:
    properties:
      end_time:
        example: "2025-07-10T07:00:43.047939731+03:00"
        type: string
      name:
        example: do stuff
        type: string
      start_time:
        example: "2024-07-10T07:00:43.047939731+03:00"
        type: string
      task_id:
        example: 1
        minimum: 1
        type: integer
      user_id:
        example: 1
        minimum: 1
        type: integer
    type: object
  model.User:
    properties:
      address:
        example: г. Москва, ул. Ленина, д. 5, кв. 1
        type: string
      id:
        example: 1
        minimum: 1
        type: integer
      name:
        example: Иван
        maxLength: 255
        type: string
      passport_number:
        example: "567890"
        maxLength: 6
        minLength: 6
        type: string
      passport_series:
        example: "1234"
        maxLength: 4
        minLength: 4
        type: string
      patronymic:
        example: Иванович
        maxLength: 255
        type: string
      surname:
        example: Иванов
        maxLength: 255
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  title: Time Tracker API
  version: "1.0"
paths:
  /tasks/activity/{user_id}:
    get:
      consumes:
      - application/json
      description: Получение трудозатрат по пользователю за период задача-сумма часов
        и минут с сортировкой от большей затраты к меньшей
      parameters:
      - description: User ID
        example: 1
        in: path
        minimum: 1
        name: user_id
        required: true
        type: integer
      - example: "2025-01-02T15:04:05Z"
        format: date-time
        in: query
        name: end_time
        required: true
        type: string
      - example: "2024-01-02T15:04:05Z"
        format: date-time
        in: query
        name: start_time
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PrettyActivity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.InternalServerErrorResponse'
      summary: Task activity
      tags:
      - tasks
  /tasks/end:
    post:
      consumes:
      - application/json
      description: End task by task ID and user ID
      parameters:
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.EndTask'
      produces:
      - application/json
      responses:
        "200":
          description: task ended
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.InternalServerErrorResponse'
      summary: End task
      tags:
      - tasks
  /tasks/start:
    post:
      consumes:
      - application/json
      description: Start task with name for specified user by id
      parameters:
      - description: task data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.StartTask'
      produces:
      - application/json
      responses:
        "200":
          description: task started
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.InternalServerErrorResponse'
      summary: Start task
      tags:
      - tasks
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve users info with filtering and pagination support
      parameters:
      - example: 1
        in: query
        minimum: 1
        name: page
        type: integer
      - example: 10
        in: query
        minimum: 1
        name: page_size
        type: integer
      - example: г. Москва, ул. Ленина, д. 5, кв. 1
        in: query
        name: address
        type: string
      - example: 1
        in: query
        minimum: 1
        name: id
        type: integer
      - example: Иван
        in: query
        maxLength: 255
        name: name
        type: string
      - example: "567890"
        in: query
        maxLength: 6
        minLength: 6
        name: passport_number
        type: string
      - example: "1234"
        in: query
        maxLength: 4
        minLength: 4
        name: passport_series
        type: string
      - example: Иванович
        in: query
        maxLength: 255
        name: patronymic
        type: string
      - example: Иванов
        in: query
        maxLength: 255
        name: surname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.InternalServerErrorResponse'
      summary: Get users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create user by passport number
      parameters:
      - description: Full Passport Number
        in: body
        name: passportNumber
        required: true
        schema:
          $ref: '#/definitions/model.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: user created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.InternalServerErrorResponse'
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.InternalServerErrorResponse'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User ID
        example: 1
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.InternalServerErrorResponse'
      summary: Get user
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update all or several user fields
      parameters:
      - description: User ID
        example: 1
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: user updated
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.InternalServerErrorResponse'
      summary: Update a user
      tags:
      - users
produces:
- application/json
swagger: "2.0"
